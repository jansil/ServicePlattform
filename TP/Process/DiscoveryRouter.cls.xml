<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="TP.Process.DiscoveryRouter">
<ClassType>persistent</ClassType>
<Super>Ens.BusinessProcess</Super>
<TimeCreated>62938,51809.217748</TimeCreated>

<Property name="TargetConfigName">
<Description>
Configuration item to which to send messages</Description>
<Type>Ens.DataType.ConfigName</Type>
</Property>

<Property name="Host">
<Description>
Host where WSDLs exist</Description>
<Type>%String</Type>
<InitialExpression>"localhost"</InitialExpression>
</Property>

<Property name="Port">
<Description>
Port for host where WSDLs exist</Description>
<Type>%String</Type>
<InitialExpression>"57772"</InitialExpression>
</Property>

<Property name="BasePath">
<Description>
Base path for WSDL location</Description>
<Type>%String</Type>
<InitialExpression>"/CSP/tpens/services/"</InitialExpression>
</Property>

<Property name="LookupTable">
<Description>
Which Lookup table to use for path to WSDL translation</Description>
<Type>%String</Type>
<InitialExpression>"AddressTranslation"</InitialExpression>
</Property>

<Parameter name="SETTINGS">
<Default>TargetConfigName,Host,Port,BasePath,LookupTable</Default>
</Parameter>

<Method name="OnRequest">
<FormalSpec>pRequest:TP.Message.DiscoveryRequest,*pResponse:TP.Message.DiscoveryResponse</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#Dim tSC As %Status
	#Dim tWSDLURL As %String
	#Dim tURLPart As %String
	Set tSC = $$$OK
	Set tWSDLURL = ""
	
	//Get WSDL URL based on incoming URL
	Set tURLPart = pRequest.OriginalURL
	
	#Dim i As %Integer
	#Dim tPos As %Integer
	#Dim tCoreComponent As %Integer
	#Dim tCorePath As %String
	Set tCoreComponent = 0
	Set tCorePath = ""
	Set tList = $LISTFROMSTRING(pRequest.OriginalURL, "/")
	Set tPos = 0
	For i=1:1:$LISTLENGTH(tList) {
		If ($FIND($ZCONVERT($LIST(tList,i),"L"), "rivta") > 0) {
			Set tPos = i
		}
		ElseIf ($FIND($ZCONVERT($LIST(tList,i),"L"), "core_component") > 0) {
			Set tCoreComponent = i
		}
	}
	
	//Remove everything after rivta in url
	If (tPos > 0) {
		Set tURLPart = $PIECE(pRequest.OriginalURL,"/",1,tPos)
	}
	If (tCoreComponent > 0) {
		Set tCorePath = $PIECE(pRequest.OriginalURL,"/",tCoreComponent,$LENGTH(pRequest.OriginalURL,"/"))
	}
	
	//Check if this is a request for .xsd file
	#Dim tXSD As %Boolean
	#Dim tXSDFile As %String
	Set tXSD = 0
	Set tXSDFile = ""
	If ($EXTRACT(pRequest.OriginalURL, *-3, *) = ".xsd") {
		Set tXSD = 1
		Set tXSDFile = $PIECE(pRequest.OriginalURL,"/",$LENGTH(pRequest.OriginalURL,"/"))
	}
	
	//Get WSDL path from Lookup Table
	Try {
		Set tWSDLURL = ..BasePath _ ^Ens.LookupTable(..LookupTable, tURLPart)
	}
	Catch {
		Throw ##class(TP.Common.Exception).%New("InterfaceNotPublished","9999","TP.Process.DiscoveryRouter","The requested interface has not been published in the service platform.")
	}
	
	//Check if this was a request for .xsd file
	If (tXSD && (tCoreComponent = 0)) {
		Set tWSDLURL = $PIECE(tWSDLURL,"/",1,$LENGTH(tWSDLURL,"/")-1) _ "/" _ tXSDFile
	}
	ElseIf(tXSD && tCoreComponent) {
		#Dim j As %Integer
		#Dim tPosSchema As %Integer
		Set tListWSDL = $LISTFROMSTRING(tWSDLURL, "/")
		Set tPosSchema = 0
		For j=1:1:$LISTLENGTH(tListWSDL) {
			If ($FIND($ZCONVERT($LIST(tListWSDL,j),"L"), "schema") > 0) {
				Set tPosSchema = j
			}
		}
		//Remove everything after schemas in url
		If (tPosSchema > 0) {
			Set tWSDLURL = $PIECE(tWSDLURL,"/",1,tPosSchema) _ "/" _ tCorePath
		}
	}
	
	Set pRequest.Host = ..Host
	Set pRequest.Port = ..Port
	Set pRequest.URL = tWSDLURL
	
	Set tSC = ..SendRequestSync(..TargetConfigName, pRequest, .pResponse)
	
	Quit tSC
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>DiscoveryRouterDefaultData</DefaultData>
<Data name="DiscoveryRouterDefaultData">
<Structure>listnode</Structure>
<Subscript>"DiscoveryRouter"</Subscript>
<Value name="1">
<Value>TargetConfigName</Value>
</Value>
<Value name="2">
<Value>Host</Value>
</Value>
<Value name="3">
<Value>Port</Value>
</Value>
<Value name="4">
<Value>BasePath</Value>
</Value>
<Value name="5">
<Value>LookupTable</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
