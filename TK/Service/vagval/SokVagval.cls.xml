<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="TK.Service.Vagval.SokVagval">
<IncludeCode>Ensemble</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%RegisteredObject</Super>
<TimeCreated>62536,43263.048712</TimeCreated>

<UDLText name="T">
<Content><![CDATA[
// Method hamtaAllaAnropsBehorigheter(hamtaAllaAnropsBehorigheter As %String) As %ListOfObjects(ELEMENTTYPE="TK.Service.Vagval.tns.anropsBehorighetsInfoType",XMLPROJECTION="element",XMLNAME="anropsBehorighetsInfo")

]]></Content>
</UDLText>

<Method name="hamtaAllaAnropsBehorigheter">
<FormalSpec>sNameSpace:%String,sSenderId:%String,sReceiverId:%String</FormalSpec>
<ReturnType>%ListOfObjects</ReturnType>
<ReturnTypeParams>ELEMENTTYPE="TK.Service.Vagval.tns.anropsBehorighetsInfoType",XMLPROJECTION="element",XMLNAME="anropsBehorighetsInfo"</ReturnTypeParams>
<Implementation><![CDATA[
 // Web Service Method Implementation Goes Here.
 #Dim tException As %Exception.SystemException
 #Dim tStatus, tmpStatus As %Status
 Set tStatus = $$$OK
 
 Try
 	{
	$$$TRACE("Namespace=" _ sNameSpace)
	$$$TRACE("SenderId=" _ sSenderId)
	$$$TRACE("ReceiverId=" _ sReceiverId)
 	#Dim ret As %ListOfObjects
 	Set ret = ##class(%ListOfObjects).%New()
 	#Dim auth As TK.Service.Vagval.tns.anropsBehorighetsInfoType
 	Set auth = ##class(TK.Service.Vagval.tns.anropsBehorighetsInfoType).%New()
    

    &sql(DECLARE C1 CURSOR FOR select a.Id, la.HsaId, t.HsaId, k.Namnrymd, a.FromTidpunkt, a.TomTidpunkt into 
    :anropsBehorighetsInfoId, :receiverId, :senderId, :tjansteKontrakt, :fromTidpunkt, :tomTidpunkt from 
    TK.Anropsbehorighet a, TK.Tjanstekontrakt k, TK.Tjanstekomponent t, TK.LogiskAdressat la where 
    a.Tjanstekontrakt_id = k.Id and a.Tjanstekonsument_id = t.Id and a.LogiskAdressat_id = la.Id and 
    t.HsaId = :sSenderId and k.Namnrymd = :sNameSpace and la.HsaId = :sReceiverId and 
    a.FromTidpunkt <= CURRENT_DATE and a.TomTidpunkt >= CURRENT_DATE)
    $$$TRACE("SQL=select a.Id, la.HsaId, t.HsaId, k.Namnrymd, a.FromTidpunkt, a.TomTidpunkt from  TK.Anropsbehorighet a, TK.Tjanstekontrakt k, TK.Tjanstekomponent t, TK.LogiskAdressat la where a.Tjanstekontrakt_id = k.Id and a.Tjanstekonsument_id = t.Id and a.LogiskAdressat_id = la.Id and t.HsaId = " _ sSenderId _ " and k.Namnrymd = " _ sNameSpace _ " and la.HsaId = " _ sReceiverId _ " and a.FromTidpunkt <= " _ $ZDateTime($H,3) _ " and a.TomTidpunkt >= " _ $ZDateTime($H,3))
	    
	&sql(OPEN C1)
	&sql(FETCH C1)
	
	While (SQLCODE = 0) {
    	
    	Set auth = ##class(TK.Service.Vagval.tns.anropsBehorighetsInfoType).%New()
    	Set auth.anropsBehorighetsInfoId = anropsBehorighetsInfoId
    	Set auth.fromTidpunkt = fromTidpunkt
    	Set auth.receiverId = receiverId
    	Set auth.senderId = senderId
    	Set auth.tjansteKontrakt = tjansteKontrakt
    	Set auth.tomTidpunkt = tomTidpunkt
    	Do ret.Insert(auth)
    	&sql(FETCH C1)
    	
 	}
    
 	&sql(CLOSE C1)
 	}
 	Catch(tException) {
	 	Set tStatus = $$$ERROR($$$GeneralError, " An error has occurred in TK.Service.Vagval.SokVagvalsSoap11LitDocPort " _ tException.AsStatus())	
		//$$$LOGERROR("An error has occurred in TK.Service.Vagval.SokVagvalsSoap11LitDocPort, method hamtaAllaVirtualiseringar")
		Quit
		
 	}
 
 Quit ret
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
// Method hamtaAllaVirtualiseringar(hamtaAllaVirtualiseringar As %String) As %ListOfObjects(ELEMENTTYPE="TK.Service.Vagval.tns.virtualiseringsInfoType",XMLPROJECTION="element",XMLNAME="virtualiseringsInfo")

]]></Content>
</UDLText>

<Method name="hamtaAllaVirtualiseringar">
<FormalSpec>sServiceContract:%String,sSenderId:%String,sReceiverId:%String</FormalSpec>
<ReturnType>%ListOfObjects</ReturnType>
<ReturnTypeParams>ELEMENTTYPE="TK.Service.Vagval.tns.virtualiseringsInfoType",XMLPROJECTION="element",XMLNAME="virtualiseringsInfo"</ReturnTypeParams>
<Implementation><![CDATA[
 // Web Service Method Implementation Goes Here.
 //Input may look like this contract=urn:riv:crm:scheduling:CancelBooking:1:rivtabp20;ReceiverId=SE2321000172-2B4D;RIVTA=RIVTABP20
 
 $$$TRACE("ServiceContract=" _ sServiceContract)
 $$$TRACE("SenderId=" _ sSenderId)
 $$$TRACE("ReceiverId=" _ sReceiverId)
 #Dim tException As %Exception.SystemException
 #Dim tStatus, tmpStatus As %Status
 Set tStatus = $$$OK
 
 Try
 	{
 	#Dim ret As %ListOfObjects
	Set ret = ##class(%ListOfObjects).%New()
 
 	#Dim virt As TK.Service.Vagval.tns.virtualiseringsInfoType
 	//Set virt = ##class(TK.Service.Vagval.tns.virtualiseringsInfoType).%New()
	
	//Orginal utan where villkor för contrakt,SenderId och ReceiverId
	//&sql(DECLARE C2 CURSOR FOR select a.Id, t.HsaId, t.Adress, k.Namnrymd, a.FromTidpunkt, a.TomTidpunkt into :virtualiseringsInfoId, :receiverId, :rivProfil, :tjansteKontrakt, :fromTidpunkt, :tomTidpunkt from TK.LogiskAdress a, TK.Tjanstekontrakt k, TK.Tjanstekomponent t, TK.LogiskAdressat la, TK.RivVersion r where a.Tjanstekontrakt_id = k.Id and a.Tjansteproducent_id = t.Id and a.Rivversion_id = r.Id and a.LogiskAdressat_id = la.Id)
	//Ny sql  med where villkor för contrakt,SenderId och ReceiverId
	
	&sql(DECLARE C2 CURSOR FOR select a.Id, t.HsaId, t.Adress, k.Namnrymd, a.FromTidpunkt, a.TomTidpunkt into 
	:virtualiseringsInfoId, :receiverId, :adress, :tjansteKontrakt, :fromTidpunkt, :tomTidpunkt 
	from TK.LogiskAdress a, TK.Tjanstekontrakt k, TK.Tjanstekomponent t, TK.LogiskAdressat la, TK.RivVersion r 
	where a.Tjanstekontrakt_id = k.Id and a.Tjansteproducent_id = t.Id and a.Rivversion_id = r.Id and 
	a.LogiskAdressat_id = la.Id and k.namnrymd = :sServiceContract and la.HsaId = :sReceiverId)
	
	$$$TRACE("SQL=a.Id, t.HsaId, t.Adress, k.Namnrymd, a.FromTidpunkt, a.TomTidpunkt from TK.LogiskAdress a, TK.Tjanstekontrakt k, TK.Tjanstekomponent t, TK.LogiskAdressat la, TK.RivVersion r where a.Tjanstekontrakt_id = k.Id and a.Tjansteproducent_id = t.Id and a.Rivversion_id = r.Id and a.LogiskAdressat_id = la.Id and k.namnrymd = " _ sServiceContract _ " and la.HsaId = " _ sReceiverId _ " and a.FromTidpunkt <= " _ $ZDateTime($H,3) _ " and a.TomTidpunkt >=" _ $ZDateTime($H,3))
	
	&sql(OPEN C2)
	&sql(FETCH C2)
	
	While (SQLCODE = 0) {
    	
    	Set virt = ##class(TK.Service.Vagval.tns.virtualiseringsInfoType).%New()
    	Set virt.fromTidpunkt = fromTidpunkt
    	Set virt.receiverId = receiverId
    	Set virt.tjansteKontrakt = tjansteKontrakt
    	Set virt.tomTidpunkt = tomTidpunkt
    	Set virt.adress = adress
    	Set virt.virtualiseringsInfoId = virtualiseringsInfoId
    	Do ret.Insert(virt)
    	
    	
    	&sql(FETCH C2)
 	}
    
 	&sql(CLOSE C2)
 	}
 	Catch(tException) {
	 	Set tStatus = $$$ERROR($$$GeneralError, " An error has occurred in TK.Service.Vagval.SokVagvalsSoap11LitDocPort " _ tException.AsStatus())	
		//$$$LOGERROR("An error has occurred in TK.Service.Vagval.SokVagvalsSoap11LitDocPort, method hamtaAllaVirtualiseringar")
		Quit
		
 	}
	Quit ret
]]></Implementation>
</Method>
</Class>
</Export>
